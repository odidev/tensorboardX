# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]


jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        sudo apt install libsndfile1
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f test-requirements.txt ]; then pip install -r test-requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 tensorboardX --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 tensorboardX --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      env:
          MPLBACKEND: Agg
          PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION: python
      run: |
        visdom &
        pytest --cov=tensorboardX tests/


    - name: Code Coverage Report
      env: 
          CODECOV_TOKEN: "26239910-fe4e-463d-aa3d-e662e9bf39ef"
      run: |
        codecov

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Run examples
      run: |
        pip install six tensorboard pytest matplotlib torchvision==0.10.0 protobuf==3.8 moviepy==1.0.3
        python examples/demo.py
        python examples/demo_graph.py
        python examples/demo_embedding.py
        python examples/demo_custom_scalars.py
        python examples/demo_multiple_embedding.py
        python examples/demo_purge.py
        python examples/demo_matplotlib.py

  test-aarch64:
    name: build_arm64
    runs-on: ubuntu-latest
    strategy:
        fail-fast: false 
    steps:
    - uses: actions/checkout@v2
    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v1
    - name: Build and Test for arm64
      run: |
           docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
           arm64v8/ubuntu:latest \
           bash -exc 'apt-get update && \
           apt-get -y install git && \
           ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime && \
           export DEBIAN_FRONTEND=noninteractive && \
           apt-get install -y tzdata && \
           dpkg-reconfigure --frontend noninteractive tzdata && \
           apt install -y software-properties-common && \
           add-apt-repository ppa:deadsnakes/ppa && \
           apt install -y python3.8 && \
           apt install -y python3.8-venv && \
           python3.8 -m venv venv38 && \
           source venv38/bin/activate && \
           python -m pip install --upgrade pip && \
           apt-get install sudo && \
           sudo apt install -y libsndfile1 && \
           pip install flake8 pytest && \
           python -m pip install -r test-requirements.txt && \
           flake8 tensorboardX --count --select=E9,F63,F7,F82 --show-source --statistics && \
           flake8 tensorboardX --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics && \
           python -m pip install --upgrade protobuf && \
           #visdom & && \
           python -m pytest --cov=tensorboardX tests/'
